<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CmdCommandArgDesc" xml:space="preserve">
    <value>An optional command, with arguments, to be spawned in the new tab or pane</value>
  </data>
  <data name="CmdFocusTabDesc" xml:space="preserve">
    <value>Move focus to another tab</value>
  </data>
  <data name="CmdFocusTabNextArgDesc" xml:space="preserve">
    <value>Move focus to the next tab</value>
  </data>
  <data name="CmdFTDesc" xml:space="preserve">
    <value>An alias for the "focus-tab" subcommand.</value>
    <comment>{Locked="\"focus-tab\""}</comment>
  </data>
  <data name="CmdFocusTabPrevArgDesc" xml:space="preserve">
    <value>Move focus to the previous tab</value>
  </data>
  <data name="CmdFocusTabTargetArgDesc" xml:space="preserve">
    <value>Move focus the tab at the given index</value>
  </data>
  <data name="CmdSplitPaneSizeArgDesc" xml:space="preserve">
    <value>Specify the size as a percentage of the parent pane. Valid values are between (0,1), exclusive.</value>
  </data>
  <data name="CmdNewTabDesc" xml:space="preserve">
    <value>Create a new tab</value>
  </data>
  <data name="CmdNTDesc" xml:space="preserve">
    <value>An alias for the "new-tab" subcommand.</value>
    <comment>{Locked="\"new-tab\""}</comment>
  </data>
  <data name="CmdProfileArgDesc" xml:space="preserve">
    <value>Open with the given profile. Accepts either the name or GUID of a profile</value>
  </data>
  <data name="CmdSplitPaneDesc" xml:space="preserve">
    <value>Create a new split pane</value>
  </data>
  <data name="CmdSPDesc" xml:space="preserve">
    <value>An alias for the "split-pane" subcommand.</value>
    <comment>{Locked="\"split-pane\""}</comment>
  </data>
  <data name="CmdSplitPaneHorizontalArgDesc" xml:space="preserve">
    <value>Create the new pane as a horizontal split (think [-])</value>
  </data>
  <data name="CmdSplitPaneVerticalArgDesc" xml:space="preserve">
    <value>Create the new pane as a vertical split (think [|])</value>
  </data>
  <data name="CmdStartingDirArgDesc" xml:space="preserve">
    <value>Open in the given directory instead of the profile's set "startingDirectory"</value>
    <comment>{Locked="\"startingDirectory\""}</comment>
  </data>
  <data name="CmdTitleArgDesc" xml:space="preserve">
    <value>Open the terminal with the provided title instead of the profile's set "title"</value>
    <comment>{Locked="\"title\""}</comment>
  </data>
  <data name="CmdTabColorArgDesc" xml:space="preserve">
    <value>Open the tab with the specified color, in #rrggbb format</value>
  </data>
  <data name="CmdVersionDesc" xml:space="preserve">
    <value>Display the application version</value>
  </data>
  <data name="CmdMaximizedDesc" xml:space="preserve">
    <value>Launch the window maximized</value>
  </data>
  <data name="CmdFullscreenDesc" xml:space="preserve">
    <value>Launch the window in fullscreen mode</value>
  </data>
  <data name="CmdMoveFocusDesc" xml:space="preserve">
    <value>Move focus to the adjacent pane in the specified direction</value>
  </data>
  <data name="CmdMFDesc" xml:space="preserve">
    <value>An alias for the "move-focus" subcommand.</value>
    <comment>{Locked="\"move-focus\""}</comment>
  </data>
  <data name="CmdMoveFocusDirectionArgDesc" xml:space="preserve">
    <value>The direction to move focus in</value>
  </data>
  <data name="CmdFocusDesc" xml:space="preserve">
    <value>Launch the window in focus mode</value>
  </data>
</root>
